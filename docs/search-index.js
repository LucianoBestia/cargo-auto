var searchIndex = new Map(JSON.parse('[\
["cargo_auto",{"doc":"cargo-auto","t":"H","n":["main"],"q":[[0,"cargo_auto"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[1,"tuple"]],"b":[]}],\
["cargo_auto_local_lib",{"doc":"cargo-auto","t":"FSFFFFFFFSSSOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCONNNNNNNNNNNNNNNNCNNNNNNNNHCCCCCNNNNNNNNNNNNNNNNNNNNNNNNCFFHNNNNNNNNNNNNOONNNNNNHHHHNNHNNNNNNOHHHHHHHHHHHHHHHHHFNNHHNNNNHHHNNHNNHOOOOOOHONNNHHHH","n":["FileItem","GREEN","PATH_AUTOMATION_TASKS_RS","PATH_CARGO_TOML","PATH_FILE_HASHES_JSON","PATH_GITIGNORE","PATH_SRC","PATH_SRC_MAIN_RS","PATH_TARGET_DEBUG_AUTOMATION_TASKS_RS","RED","RESET","YELLOW","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","file_content","file_hashes_mod","file_name","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","inside_of_rust_project_mod","into","into","into","into","into","into","into","into","is_not_run_in_rust_project_root_directory","outside_of_rust_project_mod","template_new_auto_mod","template_new_cli_mod","template_new_pwa_wasm_mod","template_new_wasm_mod","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils_mod","FileHashes","FileMetaData","are_all_files_equal","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","filehash","filename","from","from","init","init","into","into","is_project_changed","read_file_metadata","read_json_file","save_json_file_for_file_meta_data","serialize","serialize","sha256_digest","try_from","try_from","try_into","try_into","type_id","type_id","vec_file_metadata","already_exists_automation_tasks_rs","completion","match_first_argument","parse_args","print_help_from_cargo_auto","completion","match_first_argument","parse_args","print_help_from_cargo_auto","compile_automation_tasks_rs_if_needed","compile_project_automation_tasks_rs","copy_to_files","get_vec_file","new_auto","copy_to_files","get_vec_file","new_cli","PwaJson5","borrow","borrow_mut","copy_to_files","decode_png","deref","deref_mut","deserialize","drop","encode_to_favicon_ico","encode_to_png","favicon_add_entry","fmt","from","get_vec_file","init","into","new_pwa_wasm","project_author","project_homepage","project_repository","pwa_description","pwa_name","pwa_short_name","resize_image","rust_project_name","try_from","try_into","type_id","copy_to_files","get_vec_file","new_wasm","run_shell_command_success"],"q":[[0,"cargo_auto_local_lib"],[125,"cargo_auto_local_lib::file_hashes_mod"],[162,"cargo_auto_local_lib::inside_of_rust_project_mod"],[167,"cargo_auto_local_lib::outside_of_rust_project_mod"],[171,"cargo_auto_local_lib::template_new_auto_mod"],[176,"cargo_auto_local_lib::template_new_cli_mod"],[179,"cargo_auto_local_lib::template_new_pwa_wasm_mod"],[208,"cargo_auto_local_lib::template_new_wasm_mod"],[211,"cargo_auto_local_lib::utils_mod"],[212,"std::path"],[213,"core::result"],[214,"core::any"],[215,"alloc::vec"],[216,"serde::de"],[217,"serde::ser"],[218,"std::path"],[219,"anyhow"],[220,"std::env"],[221,"core::option"],[222,"image::dynimage"],[223,"ico::icondir"],[224,"core::fmt"],[225,"core::fmt"]],"d":["FileItem to copy text file into String for generators","ANSI color","automation_tasks_rs","automation_tasks_rs/Cargo.toml","automation_tasks_rs/.file_hashes.json","automation_tasks_rs/.gitignore","automation_tasks_rs/src","automation_tasks_rs/src/main.rs","automation_tasks_rs/target/debug/automation_tasks_rs","ANSI color","ANSI color","ANSI color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calculate file hashes","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","commands accessible inside a Rust project folder","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if is not run in Rust project root directory","commands accessible outside a Rust project folder","template for new_auto (automation_tasks_rs)","template for new_cli","template for new_pwa_wasm","template for new_wasm","","","","","","","","","","","","","","","","","","","","","","","","","various utilities","the struct that represents the file automation_tasks_rs/._…","file metadata","","","","","","","","","","","","","","hash of file","filename with path from Cargo.toml folder","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","check if the files are modified and in automation_tasks_rs …","make a vector of file metadata","read automation_tasks_rs/.file_hashes.json","save the new file metadata","","","calculate the hash for a file","","","","","","","vector of file metadata","already exists automation_tasks_rs directory","sub-command for bash auto-completion of <code>cargo auto</code> using …","the first argument is the task: new_auto, build, release,…","","if there is no argument then print help if there exists …","sub-command for bash auto-completion of <code>cargo auto</code> using …","the first argument is the task: new_cli, or new_wasm… in …","it is run outside a Rust project It must have the argument …","","build if the files are different then the hashes in …","build automation_tasks_rs panic! if cannot compile …","","","copies the template to the <code>automation_tasks_rs</code> directory …","","","","","","","","decode png","","","","","","encode to png","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","resize img","","","","","","","","run one shell command and return true if success"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,2,4,5,6,7,8,9,24,2,4,5,6,7,8,9,24,2,4,5,6,7,8,9,24,2,2,4,4,5,5,6,6,7,7,8,8,9,9,24,2,4,5,6,7,8,9,24,2,4,5,6,7,8,9,24,0,24,24,2,4,5,6,7,8,9,24,2,4,5,6,7,8,9,0,24,2,4,5,6,7,8,9,0,0,0,0,0,0,24,2,4,5,6,7,8,9,24,2,4,5,6,7,8,9,24,2,4,5,6,7,8,9,0,0,0,0,14,17,14,17,14,17,14,17,14,17,14,17,14,14,14,17,14,17,14,17,0,0,0,0,14,17,0,14,17,14,17,14,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,26,26,26,26,0,0,0,26,26,0,26,26,0,26,26,26,26,26,26,0,26,26,26,26,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[2,3],[1,-1,[]],[4,3],[5,3],[1,-1,[]],[6,3],[1,-1,[]],[7,3],[1,-1,[]],[8,3],[1,-1,[]],[1,-1,[]],[9,3],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,10],[1,10],[1,10],[1,10],[1,10],[1,10],[1,10],[1,10],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],0,0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[[[15,[14]],[15,[14]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[12,[14]]],16],[-1,[[12,[17]]],16],[1,10],[1,10],0,0,[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],[[15,[14]]]],[18,17],[[[15,[14]]],10],[[14,-1],12,19],[[17,-1],12,19],[20,[[22,[21]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[[],11],[[],10],[[18,23],10],[23,10],[[],10],[[],10],[[18,23],10],[23,10],[[],10],[[],10],[[],10],[18,10],[[],[[15,[24]]]],[[],10],[18,10],[[],[[15,[24]]]],[[[25,[21]]],10],0,[-1,-2,[],[]],[-1,-2,[],[]],[26,10],[[[15,[27]]],28],[1,-1,[]],[1,-1,[]],[-1,[[12,[26]]],16],[1,10],[[28,18,18],10],[28,[[15,[27]]]],[[28,29,30],10],[[26,31],32],[-1,-1,[]],[[],[[15,[24]]]],[[],1],[-1,-2,[],[]],[[[25,[21]]],10],0,0,0,0,0,0,[[28,29,18,18,18],10],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[18,10],[[],[[15,[24]]]],[[[25,[21]]],10],[18,11]],"c":[],"p":[[1,"usize"],[5,"PATH_AUTOMATION_TASKS_RS",0],[5,"PathBuf",212],[5,"PATH_CARGO_TOML",0],[5,"PATH_GITIGNORE",0],[5,"PATH_SRC_MAIN_RS",0],[5,"PATH_SRC",0],[5,"PATH_TARGET_DEBUG_AUTOMATION_TASKS_RS",0],[5,"PATH_FILE_HASHES_JSON",0],[1,"tuple"],[1,"bool"],[6,"Result",213],[5,"TypeId",214],[5,"FileMetaData",125],[5,"Vec",215],[10,"Deserializer",216],[5,"FileHashes",125],[1,"str"],[10,"Serializer",217],[5,"Path",212],[5,"String",218],[8,"Result",219],[5,"Args",220],[5,"FileItem",0],[6,"Option",221],[5,"PwaJson5",179],[1,"u8"],[6,"DynamicImage",222],[1,"u32"],[5,"IconDir",223],[5,"Formatter",224],[8,"Result",224]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
