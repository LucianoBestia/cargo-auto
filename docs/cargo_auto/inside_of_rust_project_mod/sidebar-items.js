initSidebarItems({"constant":[["GREEN",""],["RED",""],["RESET",""],["YELLOW",""]],"fn":[["already_exists_automation_tasks_rs","already exists automation_tasks_rs directory"],["build_automation_tasks_rs_if_needed","build if the date of Cargo.toml or main.rs is newer then of automation_tasks_rs/target/automation_tasks_rs"],["build_project_automation_tasks_rs","build automation_tasks_rs"],["completion","sub-command for bash auto-completion of `cargo auto` using the crate `dev_bestia_cargo_completion`"],["match_first_argument","the first argument is the task: new_auto, build, release,â€¦ the task `new` is processed by `cargo-auto`, all other tasks are processed by the used defined `automation_tasks_rs` in development use: `cargo run -- new_auto` in development use: `cargo run -- build` in development use: `cargo run -- release`  "],["new_auto","copies the template to the `automation_tasks_rs` directory in development use: `cargo run -- new_auto` in runtime use: `cargo auto new_auto`  "],["parse_args",""],["print_help_from_cargo_auto","if there is no argument then print help if there exists `automation_tasks_rs/Cargo.toml` and `automation_tasks_rs/src/main.rs` call automation_tasks_rs with no arguments to print the help prepared in user defined automation_tasks_rs else print the help for `cargo auto new_auto` in development use: `cargo run` in runtime use: `cargo auto`  "]]});