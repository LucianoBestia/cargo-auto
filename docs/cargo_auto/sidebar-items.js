initSidebarItems({"fn":[["already_exists_automation_tasks_rs","already exists automation_tasks_rs directory"],["auto_new","copies the template to the `automation_tasks_rs` directory the second argument is the template name without template_name copies the template_basic in development use: `cargo run -- new` in runtime use: `cargo auto new` with the argument `with_lib` copies template_with_lib in development use: `cargo run -- new with_lib` in runtime use: `cargo auto new with_lib`  "],["build_automation_tasks_rs_if_needed","build if the date of Cargo.toml or main.rs is newer then of automation_tasks_rs/target/automation_tasks_rs"],["build_project_automation_tasks_rs","build automation_tasks_rs"],["copy_template","creates directory if needed and copy files from templates: Cargo.toml, .gitignore and main.rs The template text is in the modules template_basic_mod.rs and template_with_lib_mod.rs"],["is_not_run_in_rust_project_root_directory","check if is not run in rust project root directory"],["main",""],["match_first_argument","the first argument is the task: new, build, release,â€¦ the task `new` is processed by `cargo-auto`, all other tasks are processed by the used defined `automation_tasks_rs` in development use: `cargo run -- new` in development use: `cargo run -- build` in development use: `cargo run -- release`  "],["print_help_from_cargo_auto","if there is no argument then print help if there exists `automation_tasks_rs/Cargo.toml` and `automation_tasks_rs/src/main.rs` call automation_tasks_rs with no arguments to print the help prepared in user defined automation_tasks_rs else print the help for `cargo auto new` in development use: `cargo run` in runtime use: `cargo auto`  "]],"mod":[["template_basic_mod","copy of the files in the directory template_basic"],["template_with_lib_mod","copy of the files in the directory template_with_lib"]],"struct":[["GREEN","ansi code for color"],["PATH_AUTOMATION_TASKS_RS","constant paths for read/write"],["PATH_CARGO_TOML","constant paths for read/write"],["PATH_GITIGNORE","constant paths for read/write"],["PATH_SRC_MAIN_RS","constant paths for read/write"],["PATH_TARGET_DEBUG_AUTOMATION_TASKS_RS","constant paths for read/write"],["RED","ansi code for color"],["RESET","ansi code for reset color"],["YELLOW","ansi code for color"]]});