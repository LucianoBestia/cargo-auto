var searchIndex = JSON.parse('{\
"cargo_auto":{"doc":"cargo-auto","t":"DRDDDDDRRRMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLALLLLLLFFAAAAALLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFDLLFFLLLLFFFLLFLLFMMMMMMFMLLLFFF","n":["FileItem","GREEN","PATH_AUTOMATION_TASKS_RS","PATH_CARGO_TOML","PATH_GITIGNORE","PATH_SRC_MAIN_RS","PATH_TARGET_DEBUG_AUTOMATION_TASKS_RS","RED","RESET","YELLOW","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","file_content","file_name","from","from","from","from","from","from","init","init","init","init","init","init","inside_of_rust_project_mod","into","into","into","into","into","into","is_not_run_in_rust_project_root_directory","main","outside_of_rust_project_mod","template_new_auto_mod","template_new_cli_mod","template_new_pwa_wasm_mod","template_new_wasm_mod","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","already_exists_automation_tasks_rs","completion","match_first_argument","parse_args","print_help_from_cargo_auto","completion","match_first_argument","parse_args","print_help_from_cargo_auto","build_automation_tasks_rs_if_needed","build_project_automation_tasks_rs","copy_to_files","get_vec_file","new_auto","copy_to_files","get_vec_file","new_cli","PwaJson5","borrow","borrow_mut","copy_to_files","decode_png","deref","deref_mut","deserialize","drop","encode_to_favicon_ico","encode_to_png","favicon_add_entry","fmt","from","get_vec_file","init","into","new_pwa_wasm","project_author","project_homepage","project_repository","pwa_description","pwa_name","pwa_short_name","resize_image","rust_project_name","try_from","try_into","type_id","copy_to_files","get_vec_file","new_wasm"],"q":[[0,"cargo_auto"],[96,"cargo_auto::inside_of_rust_project_mod"],[101,"cargo_auto::outside_of_rust_project_mod"],[105,"cargo_auto::template_new_auto_mod"],[110,"cargo_auto::template_new_cli_mod"],[113,"cargo_auto::template_new_pwa_wasm_mod"],[142,"cargo_auto::template_new_wasm_mod"],[145,"std::path"],[146,"core::result"],[147,"core::any"],[148,"std::env"],[149,"alloc::vec"],[150,"alloc::string"],[151,"core::option"],[152,"image::dynimage"],[153,"serde::de"],[154,"ico::icondir"],[155,"core::fmt"],[156,"core::fmt"]],"d":["","","constant paths for read/write","constant paths for read/write","constant paths for read/write","constant paths for read/write","constant paths for read/write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","check if is not run in Rust project root directory I had …","","","this strings are copied from the template_new_auto folder …","this strings are copied from the template_new_cli folder …","this strings are copied from the template_new_pwa_wasm …","this strings are copied from the template_new_wasm folder …","","","","","","","","","","","","","","","","","","","already exists automation_tasks_rs directory","sub-command for bash auto-completion of <code>cargo auto</code> using …","the first argument is the task: new_auto, build, release,…","","if there is no argument then print help if there exists …","sub-command for bash auto-completion of <code>cargo auto</code> using …","the first argument is the task: new_cli, or new_wasm… in …","it is run outside a Rust project It must have the argument …","","build if the date of Cargo.toml or main.rs is newer then …","build automation_tasks_rs","","","copies the template to the <code>automation_tasks_rs</code> directory …","","","","","","","","decode png","","","","","","encode to png","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","resize img","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,2,4,5,6,7,14,2,4,5,6,7,14,2,4,5,6,7,14,2,2,4,4,5,5,6,6,7,7,14,2,4,5,6,7,14,2,4,5,6,7,14,14,14,2,4,5,6,7,14,2,4,5,6,7,0,14,2,4,5,6,7,0,0,0,0,0,0,0,14,2,4,5,6,7,14,2,4,5,6,7,14,2,4,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,18,18,18,18,0,0,0,18,18,0,18,18,0,18,18,18,18,18,18,0,18,18,18,18,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[2,3],[1,-1,[]],[4,3],[1,-1,[]],[5,3],[6,3],[1,-1,[]],[1,-1,[]],[7,3],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,8],[1,8],[1,8],[1,8],[1,8],[1,8],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],9],[[],8],0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[],9],[[],8],[[12,13],8],[13,8],[[],8],[[],8],[[12,13],8],[13,8],[[],8],[[],8],[[],8],[12,8],[[],[[15,[14]]]],[[],8],[12,8],[[],[[15,[14]]]],[[[17,[16]]],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,8],[[[15,[19]]],20],[1,-1,[]],[1,-1,[]],[-1,[[10,[18]]],21],[1,8],[[20,12,12],8],[20,[[15,[19]]]],[[20,22,23],8],[[18,24],25],[-1,-1,[]],[[],[[15,[14]]]],[[],1],[-1,-2,[],[]],[[[17,[16]]],8],0,0,0,0,0,0,[[20,22,12,12,12],8],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[12,8],[[],[[15,[14]]]],[[[17,[16]]],8]],"c":[],"p":[[15,"usize"],[3,"PATH_AUTOMATION_TASKS_RS",0],[3,"PathBuf",145],[3,"PATH_CARGO_TOML",0],[3,"PATH_GITIGNORE",0],[3,"PATH_SRC_MAIN_RS",0],[3,"PATH_TARGET_DEBUG_AUTOMATION_TASKS_RS",0],[15,"tuple"],[15,"bool"],[4,"Result",146],[3,"TypeId",147],[15,"str"],[3,"Args",148],[3,"FileItem",0],[3,"Vec",149],[3,"String",150],[4,"Option",151],[3,"PwaJson5",113],[15,"u8"],[4,"DynamicImage",152],[8,"Deserializer",153],[15,"u32"],[3,"IconDir",154],[3,"Formatter",155],[6,"Result",155]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
